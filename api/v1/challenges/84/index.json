{"success": true, "data": {"id": 84, "name": "Dynamic Malware Analysis 1: Proxy address ", "value": 50, "initial": 500, "decay": 30, "minimum": 50, "description": "Track by `Res260#1617`\r\n\r\nIntro: Sure, binary reverse engineering is great, but have you ever\r\nfound a C2 from a well-obfuscated malware without having to\r\nread soul-crushing x86-64 instructions? Sometimes, simple dynamic analysis\r\ntechniques will yield results way faster when analysing a malware, leaving\r\nmore precious time to focus doing important stuff during an incident response.\r\n\r\nHere is a malware we found on an employee's computer. Our\r\nCyber Threat Intelligence (CTI) team believes it comes from *Alchemist Rat*,\r\na threat actor group that specifically targets our company. We have not \r\nbeen able to identify the Command and Control (C2) Server for this\r\nmalware. Please help us.\r\n\r\n-----\r\n\r\nThe malware communicates over HTTPS, using a hardcoded proxy.\r\nWhat is the proxy the malware uses? It is recommended to solve this\r\nchallenge with procmon or wireshark.\r\n**Format: `{ip}:{port}`**\r\n\r\nNote: This is **not** a binary reverse engineering challenge.\r\nYou should not have/want to solve this challenge by reversing \r\nthe malware (even if technically possible), but instead by running\r\nit in a controlled environment. This malware is safe to run on your\r\npersonnal machine, but it is good practice to have a separate\r\nenvironment (such as Virtual Machines) specifically made to run \r\nuntrusted executables. An easy way to do that with Windows is using\r\n[Windows Sandbox](https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-sandbox/windows-sandbox-overview).\r\n\r\n*Note: This challenge is inspired by a real malware that was analyzed by \r\nDesjardins' security team during an incident response investigation, using \r\nsimilar techniques.*\r\n\r\n[Download link](https://static.unitedctf.ca/b6d5348120e4a9f29fed428ec13dc2cc/malware.exe)", "connection_info": null, "category": "Desjardins", "state": "visible", "max_attempts": 0, "type": "dynamic", "type_data": {"id": "dynamic", "name": "dynamic", "templates": {"create": "/plugins/dynamic_challenges/assets/create.html", "update": "/plugins/dynamic_challenges/assets/update.html", "view": "/plugins/dynamic_challenges/assets/view.html"}, "scripts": {"create": "/plugins/dynamic_challenges/assets/create.js", "update": "/plugins/dynamic_challenges/assets/update.js", "view": "/plugins/dynamic_challenges/assets/view.js"}}, "solves": 34, "solved_by_me": false, "attempts": 0, "files": [], "tags": ["Desjardins"], "hints": [], "view": "<div class=\"modal-dialog\" role=\"document\">\n\t<div class=\"modal-content\">\n\t\t<div class=\"modal-body\">\n\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n\t\t\t\t<span aria-hidden=\"true\">&times;</span>\n\t\t\t</button>\n\t\t\t<ul class=\"nav nav-tabs\">\n\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t<a class=\"nav-link active\" href=\"#challenge\">Challenge</a>\n\t\t\t\t</li>\n\t\t\t\t\n\t\t\t\t\t<li class=\"nav-item\">\n\t\t\t\t\t\t<a class=\"nav-link challenge-solves\" href=\"#solves\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t34 Solves\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</li>\n\t\t\t\t\n\t\t\t</ul>\n\t\t\t<div role=\"tabpanel\">\n\t\t\t\t<div class=\"tab-content\">\n\t\t\t\t\t<div role=\"tabpanel\" class=\"tab-pane fade show active\" id=\"challenge\">\n\t\t\t\t\t\t<h2 class='challenge-name text-center pt-3'>\n\t\t\t\t\t\t\tDynamic Malware Analysis 1: Proxy address \n\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t<h3 class=\"challenge-value text-center\">\n\t\t\t\t\t\t\t50\n\t\t\t\t\t\t</h3>\n\n\t\t\t\t\t\t<div class=\"challenge-tags text-center\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<span class='badge badge-info challenge-tag'>Desjardins</span>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<span class=\"challenge-desc\"><p>Track by <code>Res260#1617</code></p>\n<p>Intro: Sure, binary reverse engineering is great, but have you ever\nfound a C2 from a well-obfuscated malware without having to\nread soul-crushing x86-64 instructions? Sometimes, simple dynamic analysis\ntechniques will yield results way faster when analysing a malware, leaving\nmore precious time to focus doing important stuff during an incident response.</p>\n<p>Here is a malware we found on an employee's computer. Our\nCyber Threat Intelligence (CTI) team believes it comes from <em>Alchemist Rat</em>,\na threat actor group that specifically targets our company. We have not\nbeen able to identify the Command and Control (C2) Server for this\nmalware. Please help us.</p>\n<hr />\n<p>The malware communicates over HTTPS, using a hardcoded proxy.\nWhat is the proxy the malware uses? It is recommended to solve this\nchallenge with procmon or wireshark.\n<strong>Format: <code>{ip}:{port}</code></strong></p>\n<p>Note: This is <strong>not</strong> a binary reverse engineering challenge.\nYou should not have/want to solve this challenge by reversing\nthe malware (even if technically possible), but instead by running\nit in a controlled environment. This malware is safe to run on your\npersonnal machine, but it is good practice to have a separate\nenvironment (such as Virtual Machines) specifically made to run\nuntrusted executables. An easy way to do that with Windows is using\n<a href=\"https://learn.microsoft.com/en-us/windows/security/threat-protection/windows-sandbox/windows-sandbox-overview\">Windows Sandbox</a>.</p>\n<p><em>Note: This challenge is inspired by a real malware that was analyzed by\nDesjardins' security team during an incident response investigation, using\nsimilar techniques.</em></p>\n<p><a href=\"https://static.unitedctf.ca/b6d5348120e4a9f29fed428ec13dc2cc/malware.exe\">Download link</a></p>\n</span>\n\n\t\t\t\t\t\t<span class=\"challenge-connection-info\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</span>\n\n\t\t\t\t\t\t<div class=\"challenge-hints hint-row row\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"row challenge-files text-center pb-3\">\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\n\n\t\t\t\t\t\t<div class=\"row submit-row\">\n\t\t\t\t\t\t\t<div class=\"col-md-9 form-group\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t<input id=\"challenge-id\" class=\"challenge-id\" type=\"hidden\" value=\"84\">\n\t\t\t\t\t\t\t\t\t<input id=\"challenge-input\" class=\"challenge-input\" type=\"text\" name=\"answer\" placeholder=\"Flag\"/>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class=\"col-md-3 form-group key-submit\">\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t<button id=\"challenge-submit\" class=\"challenge-submit\" type=\"submit\">\n\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div class=\"row notification-row\">\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t\t\t<div id=\"result-notification\" class=\"alert alert-dismissable text-center w-100\"\n\t\t\t\t\t\t\t\t\t role=\"alert\" style=\"display: none;\">\n\t\t\t\t\t\t\t\t\t<strong id=\"result-message\"></strong>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div role=\"tabpanel\" class=\"tab-pane fade\" id=\"solves\">\n\t\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t\t<div class=\"col-md-12\">\n\t\t\t\t\t\t\t\t<table class=\"table table-striped text-center\">\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<td><b>Name</b>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t<td><b>Date</b>\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody id=\"challenge-solves-names\">\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</table>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>"}}
